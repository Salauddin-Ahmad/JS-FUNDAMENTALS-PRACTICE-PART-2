// Constructor function for creating an object that manages array operations
function ArrayOperations(arr1, arr2) {
  this.arr1 = arr1;
  this.arr2 = arr2;
}

// Add a method to find the intersection of two arrays
ArrayOperations.prototype.intersect = function() {
  // Use a Set for O(1) lookup time to find common elements between the two arrays
  const set1 = new Set(this.arr1);
  const intersection = this.arr2.filter(item => set1.has(item));

  return intersection;
};

// Add a method to find the union of two arrays
ArrayOperations.prototype.union = function() {
  const set1 = new Set(this.arr1);
  this.arr2.forEach(item => set1.add(item));  // Adding all items from arr2 to the set
  
  return [...set1];
};

// Example usage
const array1 = [1, 2, 3, 4, 5];
const array2 = [4, 5, 6, 7, 8];

// Creating a new instance of ArrayOperations
const arrayOps = new ArrayOperations(array1, array2);

// Find intersection of arrays
console.log("Intersection: ", arrayOps.intersect());  // Output: [4, 5]

// Find union of arrays
console.log("Union: ", arrayOps.union());  // Output: [1, 2, 3, 4, 5, 6, 7, 8]
